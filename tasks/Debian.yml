---
- name: "Debian | Ensure the system can use the HTTPS transport for APT"
  stat:
    path: /usr/lib/apt/methods/https
  register: apt_https_transport

- name: "Debian | Install APT HTTPS transport"
  apt:
    name: "apt-transport-https"
    state: present
  register: are_telegraf_dependencies_packages_installed
  until: are_telegraf_dependencies_packages_installed is succeeded
  when:
    - not apt_https_transport.stat.exists
  become: yes

- name: Add InfluxDb apt repository key.
  ansible.builtin.get_url:
    url: "{{ influxdb_apt_key }}"
    dest: /etc/apt/trusted.gpg.d/influxDB.asc
    mode: '0644'
    force: true
#- name: "Debian | Download Telegraf apt key"
#  shell: |
#    wget -q https://repos.influxdata.com/influxdata-archive_compat.key -O - | \
#    gpg --dearmor | tee /etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg > /dev/null

#- name: "Debian | Download Telegraf apt key"
#  apt_key:
#    url: "{{ influxdb_apt_key }}"
#    state: present
#  register: are_telegraf_dependencies_keys_installed
#  until: are_telegraf_dependencies_keys_installed is succeeded
#  become: yes
#
#- name: "Debian | Add Telegraf repository (using LSB)"
#  apt_repository:
#    repo: "deb https://repos.influxdata.com/{{ ansible_distribution|lower }} {{ ansible_lsb.codename }} stable"
#    filename: "telegraf"
#    state: present
#  become: yes
#  when:
#    - ansible_lsb is defined
#    - ansible_lsb.codename is defined

- name: "Debian Add Telegraf repository"
  copy:
    src: influxdata.list
    dest: /etc/apt/sources.list.d/influxdata.list

- name: Update package cache
  ansible.builtin.apt:
    update_cache: yes
    autoclean: yes
  ignore_errors: yes

- name: Install telegraf
  package:
    name: telegraf
    state: present

- name: template config
  template:
    src: "telegraf.conf.j2"
    dest: "/etc/telegraf/telegraf.conf"
  register: config
  notify: restart telegraf

- name: Copy config files
  copy:
    src: "{{ item }}"
    dest: "/etc/telegraf/telegraf.d/"
  register: config_file
  notify: restart telegraf
  with_fileglob:
   - '*.conf'

- name: Populate service facts
  service_facts:

# Template specific MariaDB config
- name: Template specific MariaDB config
  include_tasks: "mysql_conf.yml"
  when:
    - ansible_facts.services['mysql.service'].status is defined
    - ansible_facts.services['mysql.service'].status == "enabled"

- name: Template specific HAproxy config
  include_tasks: "haproxy_conf.yml"
  when:
    - ansible_facts.services['haproxy.service'].status is defined
    - ansible_facts.services['haproxy.service'].status == "enabled"

- name: Enable telegraf
  service:
    name: telegraf
    enabled: yes
    state: started
